'''
    Copyright 2022 Illia Shvarov

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
'''

import random
from arq.data.idatasource import IDataSource


class BasicDataSource:
    '''
    Basic data source implementation

    Attributes
    ----------
    size : int
        Size of the data to generate

    Methods
    -------
    getData()
        Returns the data, which is used in the transmission
    randomizeData(ssize)
        Get random data
    '''

    def __init__(self, size: int) -> None:
        '''
        Parameters
        ----------
        size : int
            Size of the data to generate
        '''
        self.size = size

    def getData(self) -> bytearray:
        '''Returns the data, which is used in the transmission

        Returns
        --------
        bytearray
            The data to use
        '''
        data = self.randomizeData(self.size)
        return data

    def randomizeData(self, size: int) -> bytearray:
        '''Get random data

        Parameters
        ----------
        size : int
            Size of the data to generate

        Returns
        -------
        bytearray
            The generated bytes
        '''

        # Generate random integers
        data = bytearray()
        for index in range(0, size):
            data.append(random.randint(0, 255))

        return data


if __name__ == '__main__':
    print("This file shouldn't be used as a separate script!")
